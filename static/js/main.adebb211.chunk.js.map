{"version":3,"sources":["components/Feedback/Section.js","components/Feedback/Statistics.js","components/Feedback/FeedbackOptions.js","components/Feedback/Notification.js","components/Feedback/Feedback.js","App.js","index.js","components/Feedback/Feedback.module.css"],"names":["Section","props","className","title","children","Statistics","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","FeedbackOptions","options","onIncrease","map","option","type","onClick","Notification","message","defaultProps","Feedback","state","increaseGood","setState","prevState","increaseNeutral","increaseBad","increase","s","this","Component","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kOAgBeA,EAZC,SAACC,GACd,OAAO,qCACF,oBAAIC,UAAU,QAAd,SAAuBD,EAAME,QAC5BF,EAAMG,aCgBAC,EApBI,SAAC,GAAiF,IAA/EC,EAA8E,EAA9EA,KAAMC,EAAwE,EAAxEA,QAASC,EAA+D,EAA/DA,IAAKC,EAA0D,EAA1DA,mBAAoBC,EAAsC,EAAtCA,gCAE1D,OAAO,qCAEH,oBAAGR,UAAU,YAAb,mBAAiCI,KACjC,oBAAGJ,UAAU,YAAb,sBAAoCK,KACpC,oBAAGL,UAAU,YAAb,kBAA+BM,KAC/B,oBAAGN,UAAU,YAAb,oBAAiCO,OACjC,oBAAGP,UAAU,YAAb,gCAA6CQ,KAAqC,EAAlF,WCIOC,EAZS,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,WAE/B,OAAO,mCACFD,EAAQE,KAAI,SAAAC,GAAM,OAAI,wBAAqBb,UAAU,MAAMc,KAAK,SAASC,QAAS,kBAC/EJ,EAAWE,IADQ,SACEA,GADWA,SCJtCG,EAAe,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OAAO,mCACH,4BAAKA,OAIbD,EAAaE,aAAe,CACxBD,QAAS,IAOED,Q,gBC6DAG,E,4MArEXC,MAAQ,CACJhB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTe,aAAe,WACX,EAAKC,UAAS,SAAAC,GACV,MAAO,CACHnB,KAAMmB,EAAUnB,KAAO,O,EAKnCoB,gBAAkB,WACd,EAAKF,UAAS,SAAAC,GACV,MAAO,CACHlB,QAASkB,EAAUlB,QAAU,O,EAKzCoB,YAAc,WACV,EAAKH,UAAS,SAAAC,GACV,MAAO,CACHjB,IAAKiB,EAAUjB,IAAM,O,EAKjCoB,SAAW,SAACb,GACR,EAAKS,UAAS,SAAAC,GACV,OAAO,eACFV,EAASU,EAAUV,GAAU,O,EAK1CN,mBAAqB,WACjB,OAAO,EAAKa,MAAMhB,KAAO,EAAKgB,MAAMf,QAAU,EAAKe,MAAMd,K,EAG7DE,gCAAkC,WAC9B,OAAO,EAAKY,MAAMhB,KAAO,EAAKG,qBAAuB,K,uDAIrD,OACI,sBAAKP,UAAW2B,IAAER,SAAlB,UACI,cAAC,EAAD,CAASnB,UAAW2B,IAAE7B,QAASG,MAAM,wBAArC,SACA,cAAC,EAAD,CACIS,QAAS,CAAC,OAAQ,UAAW,OAC7BC,WAAYiB,KAAKF,aAGrB,cAAC,EAAD,CAAS1B,UAAW2B,IAAE7B,QAASG,MAAM,aAArC,SACC2B,KAAKrB,qBAAuB,cAAC,EAAD,CAAYH,KAAOwB,KAAKR,MAAMhB,KACvDC,QAAWuB,KAAKR,MAAMf,QACtBC,IAAOsB,KAAKR,MAAMd,IAClBC,mBAAsBqB,KAAKrB,mBAC3BC,gCAAkCoB,KAAKpB,kCAClC,cAAC,EAAD,CACGS,QAAQ,+B,GA/DbY,aCGRC,EAPH,kBACR,qBAAK9B,UAAU,MAAf,SACE,cAAC,EAAD,OCAN+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,SAAW,8B","file":"static/js/main.adebb211.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Section = (props) => {\r\n   return <>\r\n        <h2 className=\"Title\">{props.title}</h2>\r\n        {props.children}\r\n    </>\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Section;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, countTotalFeedback, countPositiveFeedbackPercentage }) => {\r\n\r\n    return <>\r\n    \r\n        <p className=\"Paragraph\">Good: { good}</p>\r\n        <p className=\"Paragraph\">Neutral: { neutral}</p>\r\n        <p className=\"Paragraph\">Bad: {bad}</p>\r\n        <p className=\"Paragraph\">Total: {countTotalFeedback()}</p>\r\n        <p className=\"Paragraph\">Positive Feedback: {countPositiveFeedbackPercentage() || 0}%</p>\r\n    </>\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    countTotalFeedback: PropTypes.func.isRequired,\r\n    countPositiveFeedbackPercentage: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({options, onIncrease  }) => {\r\n    \r\n    return <>\r\n        {options.map(option => <button key={option} className=\"Btn\" type=\"button\" onClick={() =>\r\n            onIncrease(option)}>{option}</button>)} \r\n        </>      \r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n    onIncrease: PropTypes.func.isRequired,\r\n}\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({message}) => {\r\n    return <>\r\n        <p>{ message}</p>\r\n     </>\r\n}\r\n\r\nNotification.defaultProps = {\r\n    message: \"\",\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string,\r\n}\r\n\r\nexport default Notification;","import React, { Component } from 'react';\r\nimport Section from './Section';\r\nimport Statistics from './Statistics';\r\nimport FeedbackOptions from './FeedbackOptions';\r\nimport Notification from './Notification';\r\nimport s from './Feedback.module.css';\r\n\r\nclass Feedback extends Component {\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0,\r\n    }\r\n\r\n    increaseGood = () => {\r\n        this.setState(prevState => {\r\n            return {\r\n                good: prevState.good + 1,\r\n            } \r\n        })\r\n    }\r\n\r\n    increaseNeutral = () => {\r\n        this.setState(prevState => {\r\n            return {\r\n                neutral: prevState.neutral + 1,\r\n            }\r\n        })\r\n    }\r\n\r\n    increaseBad = () => {\r\n        this.setState(prevState => {\r\n            return {\r\n                bad: prevState.bad + 1,\r\n            }\r\n        })\r\n    }\r\n\r\n    increase = (option) => {\r\n        this.setState(prevState => {\r\n            return {\r\n                [option]: prevState[option] + 1,\r\n            }\r\n        })\r\n    }\r\n\r\n    countTotalFeedback = () => {\r\n        return this.state.good + this.state.neutral + this.state.bad;\r\n        }\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n        return this.state.good / this.countTotalFeedback() * 100;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.Feedback}>\r\n                <Section className={s.Section} title=\"Please leave feedback\">\r\n                <FeedbackOptions\r\n                    options={[\"good\", \"neutral\", \"bad\"]}\r\n                    onIncrease={this.increase}\r\n                    />\r\n                </Section>\r\n                <Section className={s.Section} title=\"Statistics\">\r\n                {this.countTotalFeedback() ? <Statistics good= {this.state.good}\r\n                    neutral = {this.state.neutral}\r\n                    bad = {this.state.bad}\r\n                    countTotalFeedback = {this.countTotalFeedback}\r\n                    countPositiveFeedbackPercentage={ this.countPositiveFeedbackPercentage}\r\n                    /> : <Notification\r\n                            message=\"No feedback given\" />}\r\n                </Section>            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Feedback;","import React from 'react';\nimport Feedback from './components/Feedback/Feedback';\n\nconst App = () => (\n    <div className=\"App\">\n      <Feedback />\n    </div>\n  );\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Feedback\":\"Feedback_Feedback__2uJty\"};"],"sourceRoot":""}